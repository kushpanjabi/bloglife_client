{"ast":null,"code":"var _jsxFileName = \"/Users/kushpanjabi/Desktop/proj/CAPSTONE-ONE/blog-heroku/client/src/components/ListBlogs.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './ListBlogs.css';\n\nconst ListBlogs = () => {\n  const [blogs, setBlogs] = useState([]); // delete Blog function\n\n  async function deleteBlog(id) {\n    try {\n      await fetch(`/blogs/${id}`, {\n        method: \"DELETE\"\n      });\n      setBlogs(blogs.filter(blog => blog.blog_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  async function getBlogs() {\n    const res = await fetch(\"/blogs\");\n    const blogArray = await res.json();\n    setBlogs(blogArray);\n  }\n\n  useEffect(() => {\n    getBlogs();\n  }, []);\n  console.log(blogs);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, blogs.map(blog => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, blog.description), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"faicons\",\n    icon: \"trash\",\n    onClick: () => deleteBlog(blog.blog_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }))))));\n};\n\nexport default ListBlogs;","map":{"version":3,"sources":["/Users/kushpanjabi/Desktop/proj/CAPSTONE-ONE/blog-heroku/client/src/components/ListBlogs.js"],"names":["React","Fragment","useState","useEffect","FontAwesomeIcon","ListBlogs","blogs","setBlogs","deleteBlog","id","fetch","method","filter","blog","blog_id","err","console","error","message","getBlogs","res","blogArray","json","log","map","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAO,iBAAP;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAEpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAFoB,CAIpB;;AAEA,iBAAeM,UAAf,CAA0BC,EAA1B,EAA8B;AAC1B,QAAI;AACA,YAAMC,KAAK,CAAE,UAASD,EAAG,EAAd,EAAiB;AACxBE,QAAAA,MAAM,EAAE;AADgB,OAAjB,CAAX;AAIAJ,MAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBL,EAAtC,CAAD,CAAR;AACH,KAND,CAME,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ;;AAED,iBAAeC,QAAf,GAA0B;AACtB,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,QAAD,CAAvB;AAEA,UAAMW,SAAS,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAxB;AAEAf,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACH;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAH,EAAAA,OAAO,CAACO,GAAR,CAAYjB,KAAZ;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACkB,GAAN,CAAUX,IAAI,iBACf;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACY,WAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,SAA3B;AAAqC,IAAA,IAAI,EAAC,OAA1C;AAAkD,IAAA,OAAO,EAAE,MAAMjB,UAAU,CAACK,IAAI,CAACC,OAAN,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADC,CADL,CADJ,CADJ;AAeH,CA/CD;;AAiDA,eAAeT,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './ListBlogs.css';\n \n\nconst ListBlogs = () => {\n\n    const [blogs, setBlogs] = useState([]);\n\n    // delete Blog function\n\n    async function deleteBlog(id) {\n        try {\n            await fetch(`/blogs/${id}`, {\n                method: \"DELETE\",\n            });\n\n            setBlogs(blogs.filter(blog => blog.blog_id !== id));\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    async function getBlogs() {\n        const res = await fetch(\"/blogs\");\n        \n        const blogArray = await res.json();\n\n        setBlogs(blogArray);\n    }\n\n    useEffect(() => {\n        getBlogs();\n    }, []);\n\n    console.log(blogs);\n\n    return (\n        <Fragment>\n            <div>\n                {blogs.map(blog => (\n                <div className=\"list\">\n                    <p>{blog.description}</p>\n                    <span>\n                        <FontAwesomeIcon className=\"faicons\" icon='trash' onClick={() => deleteBlog(blog.blog_id)} />\n                    </span>\n                 </div>\n                ))}\n                \n            </div>\n        </Fragment>\n    )\n};\n\nexport default ListBlogs;"]},"metadata":{},"sourceType":"module"}